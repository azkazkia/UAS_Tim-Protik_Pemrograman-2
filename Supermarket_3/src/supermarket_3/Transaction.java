/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package supermarket_3;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import java.util.HashMap;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class Transaction extends javax.swing.JFrame {

    /**
     * Creates new form Transaction
     */
    private HashMap<String,String> products = new HashMap<String,String>();
    private HashMap<String,String> products_price = new HashMap<String,String>();
    private HashMap<String,String> products_name = new HashMap<String,String>();
    private HashMap<String,String> customer = new HashMap<String,String>();
    private DefaultTableModel transactionModel;
    public Transaction() {
        initComponents();
        setExtendedState(java.awt.Frame.MAXIMIZED_BOTH);
        
        showTransaction();
        getProduct();
        getCustomer();
    }
    
    private void getProduct(){
        inputProduct.removeAllItems();
        products.clear();
        products_price.clear();
        products_name.clear();
        try {
            java.sql.Connection con = new Connection().getConnection();
            String sqlServices = "SELECT * FROM product";
            Statement stat = con.createStatement();
            ResultSet hasil = stat.executeQuery(sqlServices);
            while(hasil.next()) {
                inputProduct.addItem(hasil.getString("product_name")+" - Harga: "+hasil.getString("cost_price"));
                products.put(hasil.getString("product_name")+" - Harga: "+hasil.getString("cost_price"), hasil.getString("product_id"));
                products_price.put(hasil.getString("product_name")+" - Harga: "+hasil.getString("cost_price"), hasil.getString("cost_price"));
                products_name.put(hasil.getString("product_name")+" - Harga: "+hasil.getString("cost_price"), hasil.getString("product_name"));
                // "Rekomendasi Harga: "+hasil.getString("cost_price")+", Harga Pasar: "+hasil.getString("market_price")
            }
            stat.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Gagal menampilkan data product.", "Error", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    private void getCustomer(){
        inputCustomer.removeAllItems();
        customer.clear();
        try {
            java.sql.Connection con = new Connection().getConnection();
            String sqlServices = "SELECT * FROM customer";
            Statement stat = con.createStatement();
            ResultSet hasil = stat.executeQuery(sqlServices);
            while(hasil.next()) {
                inputCustomer.addItem(hasil.getString("first_name")+" "+hasil.getString("last_name"));
                customer.put(hasil.getString("first_name")+" "+hasil.getString("last_name"), hasil.getString("cid"));
            }
            stat.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Gagal menampilkan data customer.", "Error", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        inputQty = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnTambah = new javax.swing.JButton();
        inputProduct = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        inputCustomer = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTransaction = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TRANSAKSI");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Jumlah Beli");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Produk");

        btnTambah.setText("TAMBAH");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        inputProduct.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Customer");

        inputCustomer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTambah, javax.swing.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputQty)
                            .addComponent(inputProduct, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inputCustomer, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(inputQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTambah, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                .addContainerGap())
        );

        tblTransaction.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblTransaction);

        jMenu1.setText("Supplier");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Product");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Customer");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        jMenu4.setText("Transaction");
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu4MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 602, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
        new Supplier().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        // TODO add your handling code here:
        new Product().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
        // TODO add your handling code here:
        new Customer().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenu3MouseClicked

    private void jMenu4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MouseClicked
        // TODO add your handling code here:
        new Transaction().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenu4MouseClicked

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        // TODO add your handling code here:
        String quantity, price, product, product_id, customer_id;
        quantity = inputQty.getText();
        price = products_price.get(inputProduct.getSelectedItem().toString());
        product = products_name.get(inputProduct.getSelectedItem().toString());
        product_id = products.get(inputProduct.getSelectedItem().toString());
        customer_id = customer.get(inputCustomer.getSelectedItem().toString());
        if(quantity.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Mohon isi seluruh data.", "Warning", JOptionPane.INFORMATION_MESSAGE);
        } else {

            java.sql.Connection con = new Connection().getConnection();
            String sql = "SELECT * FROM product WHERE product_id = "+product_id;
            
            try {
                Statement stat = con.createStatement();
                ResultSet hasil = stat.executeQuery(sql);
                if (hasil.next()) {
                    if (hasil.getInt("quantity") >= Integer.valueOf(quantity)) {
                        
                        sql = "INSERT INTO transaction(p_name, pid, quantity, price, customer_id) VALUES (?, ?, ?, ?, ?)";
                        PreparedStatement pst = con.prepareStatement(sql);
                        pst.setString(1, product);
                        pst.setString(2, product_id);
                        pst.setString(3, quantity);
                        pst.setString(4, price);
                        pst.setString(5, customer_id);
                        pst.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Data berhasil disimpan");
                
                        sql = "UPDATE product SET quantity = quantity - "+quantity+" WHERE product_id = '"+product_id+"'";
                        stat.executeUpdate(sql);
                
                        sql = "UPDATE customer SET cmoney_spent = cmoney_spent + "+(Integer.valueOf(quantity)*Integer.valueOf(price))+" WHERE cid = '"+customer_id+"'";
                        stat.executeUpdate(sql);
                    
                        showTransaction();
                        reset();
                        
                    } else {
                        JOptionPane.showMessageDialog(null, "Jumlah produk tidak mencukupi.", "Warning", JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Product tidak ditemukan.", "Warning", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Data gagal disimpan"+e.getMessage());
            }
        }
    }//GEN-LAST:event_btnTambahActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Transaction().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTambah;
    private javax.swing.JComboBox<String> inputCustomer;
    private javax.swing.JComboBox<String> inputProduct;
    private javax.swing.JTextField inputQty;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTransaction;
    // End of variables declaration//GEN-END:variables
    private void showTransaction() {
        Object [] baris = {"No.", "Customer", "Produk", "Jumlah", "Harga", "Subtotal", "HIDDEN_ID"};
        transactionModel = new DefaultTableModel(null, baris){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tblTransaction.setModel(transactionModel);
        tblTransaction.setRowHeight(20);
        
        java.sql.Connection con = new Connection().getConnection();
        try {
            String sql = "SELECT transaction.*, product.product_name, customer.first_name, customer.last_name FROM transaction LEFT JOIN product ON product.product_id = transaction.pid LEFT JOIN customer ON customer.cid = transaction.customer_id ORDER BY id";
            Statement stat = con.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            int num = 1;
            while(hasil.next()) {
                String id = hasil.getString("id");
                String product_name = hasil.getString("product_name");
                String customer_name = hasil.getString("first_name")+" "+hasil.getString("last_name");
                String quantity = hasil.getString("quantity");
                String price = hasil.getString("price");
                String subtotal = String.valueOf(hasil.getInt("quantity")*hasil.getInt("price"));
                String[] data = {String.valueOf(num), customer_name, product_name, quantity, price, subtotal, id};
                transactionModel.addRow(data);
                num++;
            }
                    
            tblTransaction.removeColumn(tblTransaction.getColumnModel().getColumn(6));
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Gagal menampilkan data transaksi.", "Error", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    private void reset(){
        inputQty.setText("");
        getProduct();
        getCustomer();
    }
}
